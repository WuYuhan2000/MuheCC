{
"commits": [
{
	"repository": "https://github.com/JetBrains/kotlin",
	"sha1": "55ff4ae941e12c170a5e49801e599827e6461e27",
	"url": "https://github.com/JetBrains/kotlin/commit/55ff4ae941e12c170a5e49801e599827e6461e27",
	"refactorings": [{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method protected getJetFiles(testFiles List<TestFile>) : List<JetFile> extracted from protected analyzeAndCheck(expectedText String, testFiles List<TestFile>) : void in class org.jetbrains.jet.checkers.AbstractDiagnosticsTestWithEagerResolve & moved to class org.jetbrains.jet.checkers.AbstractJetDiagnosticsTest",
	"leftSideLocations": [{
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractDiagnosticsTestWithEagerResolve.java",
		"startLine": 41,
		"endLine": 63,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "protected analyzeAndCheck(expectedText String, testFiles List<TestFile>) : void"
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractDiagnosticsTestWithEagerResolve.java",
		"startLine": 45,
		"endLine": 45,
		"startColumn": 17,
		"endColumn": 53,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractDiagnosticsTestWithEagerResolve.java",
		"startLine": 42,
		"endLine": 42,
		"startColumn": 9,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractDiagnosticsTestWithEagerResolve.java",
		"startLine": 44,
		"endLine": 46,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractDiagnosticsTestWithEagerResolve.java",
		"startLine": 43,
		"endLine": 47,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractDiagnosticsTestWithEagerResolve.java",
		"startLine": 44,
		"endLine": 46,
		"startColumn": 48,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractDiagnosticsTestWithEagerResolve.java",
		"startLine": 43,
		"endLine": 47,
		"startColumn": 45,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractJetDiagnosticsTest.java",
		"startLine": 94,
		"endLine": 102,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "protected getJetFiles(testFiles List<TestFile>) : List<JetFile>"
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractJetDiagnosticsTest.java",
		"startLine": 98,
		"endLine": 98,
		"startColumn": 17,
		"endColumn": 53,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractJetDiagnosticsTest.java",
		"startLine": 95,
		"endLine": 95,
		"startColumn": 9,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractJetDiagnosticsTest.java",
		"startLine": 97,
		"endLine": 99,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractJetDiagnosticsTest.java",
		"startLine": 96,
		"endLine": 100,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractJetDiagnosticsTest.java",
		"startLine": 97,
		"endLine": 99,
		"startColumn": 48,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractJetDiagnosticsTest.java",
		"startLine": 96,
		"endLine": 100,
		"startColumn": 45,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractDiagnosticsTestWithEagerResolve.java",
		"startLine": 40,
		"endLine": 57,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "protected analyzeAndCheck(expectedText String, testFiles List<TestFile>) : void"
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractDiagnosticsTestWithEagerResolve.java",
		"startLine": 41,
		"endLine": 41,
		"startColumn": 34,
		"endColumn": 56,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "getJetFiles(testFiles)"
}, {
		"filePath": "compiler/tests/org/jetbrains/jet/checkers/AbstractJetDiagnosticsTest.java",
		"startLine": 101,
		"endLine": 101,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "RETURN_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
}
]
}]
}